rnorm(10, 0, 1)
ss = rnorm(10, 0, 1)
mean(ss)
TRUE || FALSE
for (i in "CCC") {
print(i)
}
split(AA)
AA = "AAA"
split(AA)
#設定工作路徑(檔案放置的地方)
setwd("C:/Users/jeff/Desktop/final report") #將\改成/才有辦法在R裡面跑
#step0.1 先將excel檔轉成csv檔以便資料讀取
data <- read.csv("Percentage body fat.csv")
#step0.2 快速瀏覽data長的樣子，讓我們對data又初步的認識
head(data)
#matrix 矩陣 陣列
matrix(c(1,2,3,4,5,6), 2, 3)
#vector 向量
id1 <- c(22, 63, 160)
id2 <- c(23, 66, 120)
sum(matrix(c(1,2,3,4,5,6), 2, 3))
c(1,"AA",3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)[2]
data[, 2]
#step 1 資料清理
#step 1.1 檢查遺失值
sum(is.na(data))  #sum(matrix(c(1,2,3,4), 2, 2))概念  無遺失值
#step 1.2 檢查資料分布情形以及合理性(boxplot)
#e.g. circumference, age, weights, heights, bmi 應該都要>0, percent相關變數應該介於0~100之間
par(mfrow = c(1,1))
#step 1.2 檢查資料分布情形以及合理性(boxplot)
#e.g. circumference, age, weights, heights, bmi 應該都要>0, percent相關變數應該介於0~100之間
par(mfrow = c(1,1))
boxplot(data[, 2:10])
boxplot(data[, 11:19])
boxplot(data[, 2:10])
boxplot(data[, 11:19])
#step 1.4 檢查資料分布情形以及合理性(histogram)
par(mfrow = c(3,6))
for (i in c(2: dim(data)[2])){
hist(data[, i], xlab = colnames(data)[i], main = colnames(data)[i])
}
#step 1.4 檢查資料分布情形以及合理性(histogram)
par(mfrow = c(3,6))
for (i in c(2: dim(data)[2])){
hist(data[, i], xlab = colnames(data)[i], main = colnames(data)[i])
}
boxplot(data[, 11:19])
#step 1.2 檢查資料分布情形以及合理性(boxplot)
#e.g. circumference, age, weights, heights, bmi 應該都要>0, percent相關變數應該介於0~100之間
par(mfrow = c(1,1))
boxplot(data[, 11:19])
#step 1.2 檢查資料分布情形以及合理性(boxplot)
#e.g. circumference, age, weights, heights, bmi 應該都要>0, percent相關變數應該介於0~100之間
par(mfrow = c(1,1))
#step 1.4 檢查資料分布情形以及合理性(histogram)
par(mfrow = c(3,6))
for (i in c(2: dim(data)[2])){
hist(data[, i], xlab = colnames(data)[i], main = colnames(data)[i])
}
#step 1.2 檢查資料分布情形以及合理性(boxplot)
#e.g. circumference, age, weights, heights, bmi 應該都要>0, percent相關變數應該介於0~100之間
par(mfrow = c(1,1))
new_data <-  data[-c(39, 42, 163, 182, 221), ]
dim(new_data)
dim(data)
library(car) #VIF(VIF > 5 delete)
#Root MSE  越小越好
RMSE = function(e, o){
sqrt(mean((e - o)^2))
}
#R square for test data  越大越好
R2 = function(e, o){
1 - (sum((e - o)^2)/sum((o - mean(o))^2))
}
set.seed(1234)
test <- sample(1:247, 47)
test_data = new_data[test, ]
train_data = new_data[-test, ]
correlation_matrix = round(cor(train_data[, -c(1, 2)]), 2)
rownames(correlation_matrix)[abs(correlation_matrix[, 1]) > 0.5]
model_full <- lm(pbfs ~ . -id - pbfb - pbfs - density - fatfreew, data = train_data)
summary(model_full)                            #Traing: adj R^2:0.7197, p-value: sig
vif(model_full)     #VIF > 5: weights, heights, bmi, chestc, abdomenc, hipc, thighc
dim(new_data)
dim(data)
model1B <- lm(pbfs ~ ages + abdomenc + neckc + biceps + kneec + forearmc + wristc + ankelc, data = train_data)
summary(model1B)                            #Traing: adj R^2:0.7094, p-value: sig
vif(model1B)
model2B <- lm(pbfs ~ ages + abdomenc + biceps + forearmc + wristc + ankelc, data = train_data)
summary(model2B)                            #Traing: adj R^2:0.7094, p-value: sig
vif(model2B)
model3B <- lm(pbfs ~ ages + abdomenc + wristc, data = train_data)
summary(model3B)                            #Traing: adj R^2:0.7092, p-value: sig
vif(model3B)
predictions <- predict(model3B, test_data)  #Testing Performance:
RMSE(predictions, test_data$pbfs)          #RMSE: 4.001
R2(predictions, test_data$pbfs)            #R2: 0.78
par(mfrow = c(1,1))
plot(model3B$fitted.values, model3B$residuals, ylab="Residuals", xlab="Fitted Values", main = "Residual Plot")
abline(0, 0)
qqPlot(model3B, main="QQ Plot")
#Distribution of studentized residuals
library(MASS)
sresid <- studres(model3B)
hist(sresid, xlab = "Residuals", freq = FALSE, main="Distribution of Studentized Residuals")
xfit <- seq(min(model3B$residuals),max(model3B$residuals),length=400)
yfit <- dnorm(xfit)
lines(xfit, yfit)
